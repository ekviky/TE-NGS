
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require(data.table)
Loading required package: data.table
> # Tests the suppression of := output
> # Since this tests autoprinting at the console, it needs to use the .Rout.save mechanism in R CMD check
> DT = data.table(a=1:2)                # Should print at console?
> DT                                    # yes
   a
1: 1
2: 2
> DT[1]                                 # yes
   a
1: 1
> DT[2,a:=3L]                           # no
> DT                                    # yes
   a
1: 1
2: 3
> print(DT[2,a:=4L])                    # yes
   a
1: 1
2: 4
> print(DT)                             # yes
   a
1: 1
2: 4
> (function(){DT[2,a:=5L];NULL})()      # no
NULL
> DT                                    # yes
   a
1: 1
2: 5
> {DT[2,a:=6L];invisible()}             # no
> print(DT)                             # yes
   a
1: 1
2: 6
> (function(){print(DT[2,a:=7L]);print(DT);invisible()})()    # yes*2
   a
1: 1
2: 7
   a
1: 1
2: 7
> {print(DT[2,a:=8L]);print(DT);invisible()}                  # yes*2
   a
1: 1
2: 8
   a
1: 1
2: 8
> DT[1][,a:=9L]      # no (was too tricky to detect that DT[1] is a new object). Simple rule is that := always doesn't print
> DT[2,a:=10L][1]    # yes (because eval depth is above trigger in the := here via nested `[.data.table` calls, iiuc).
   a
1: 1
> DT[1,a:=10L][1,a:=10L]                # no
> DT[,a:=as.integer(a)]                 # no
> DT[1,a:=as.integer(a)]                # no
> DT[1,a:=10L][]                        # yes. ...[] == oops, forgot print(...)
    a
1: 10
2: 10
> 
> # Test that error in := doesn't suppress next valid print, bug #2376
> assign("depthtrigger", 20L, data.table:::.global)   # try() adds 10 levels of depth. But we need try() otherwise this script would stop.
> try(DT[,foo:=ColumnNameTypo])         # error: not found.
Error in eval(expr, envir, enclos) : object 'ColumnNameTypo' not found
> DT                                    # yes  (if we didn't change depthtrigger above this would print for depth reason and not test it)
    a
1: 10
2: 10
> DT                                    # yes
    a
1: 10
2: 10
> 
> 
> proc.time()
   user  system elapsed 
  1.740   0.096   1.810 
